str(iris)
str(iris)
library(ggplot2)
peso = c(45, 50, 60, 55, 58, 56, 48, 53)
altura = c(1.54, 1.56, 1.65, 1.60, 1.65, 1.63, 1.58, 1.59)
plot(peso, altura)
autoplot(peso, altura)
autoplot(peso, altura)
plot(peso, altura)
lm(altura ~ peso)
abline(lm(altura~peso))
abline(altura~peso)
lm(altura ~ peso)
plot(peso, altura)
abline(altura~peso)
abline(altura~peso)
ggplot(mapping=aes(peso, altura)) + geom_point() + geom_smooth(method = 'lm')
retas = ggplot(mapping = aes(peso, altura)) + geom_point() + geom_smooth(se=FALSE, method='lm') + geom_hline(yintercept = mean(altura))
retas
retas = geom_segment(aes(x=peso, y=altura, xend=peso, yend=mean(altura)), color='red')
retas + geom_segment(aes(x=peso, y=altura, xend=peso, yend=mean(altura)), color='red')
retas + geom_segment(aes(x=peso, y=altura, xend=peso, yend=mean(altura)), color='red')
ggplot(mapping=aes(peso, altura)) + geom_point() + geom_smooth(method = 'lm')
retas = ggplot(mapping = aes(peso, altura)) + geom_point() + geom_smooth(se=FALSE, method='lm') + geom_hline(yintercept = mean(altura))
retas
retas + geom_segment(aes(x=peso, y=altura, xend=peso, yend=mean(altura)), color='red')
retas + geom_segment(aes(x=peso, y=altura, xend=peso, yend=predict(lm(altura~peso))), color='red')
retas + geom_segment(aes(x=peso, y=altura, xend=peso, yend=mean(altura)), color='red')
r2 = (sqt-sqres)/sqt
sqt = sum((mean(altura)-altura)**2)
sqres = sum((predict(lm(altura~peso))-altura)**2)
r2 = (sqt-sqres)/sqt
r2
modelo = lm(altura~peso)
predict(modelo)
summary(modelo)
r2
modelo = lm(altura~peso)
predict(modelo)
summary(modelo)
dados4.4 = data.frame(
x1 = c(1, 2, 3, 3.5, 4.5, 5, 5.6, 7.5, 6.5, 9),
x2 = c(2, 2.5, 3.5, 5, 7.5, 9.5, 12, 16.5, 15, 18.5),
y = c(1, 1.1, 1.2, 1.4, 1.6, 1.7, 2, 2.5, 2.2, 2.8)
)
modelo_4.4 = lm(y ~ x1 + x2, data=dados4.4)
summary(modelo_4.4)
summary(modelo)
pesos = data.frame(peso = c(48,51,62))
pesos
predict(modelo, pesos)
help('mtcars')
View(mtcars)
setwd("C:/Users/denni/OneDrive/Área de Trabalho/Faculdade/Big Data no Agronegócio/aulaLabBigDataEmAgricultura/R/Dados")
dados = read.csv('milknew.csv')
dados$Grade <- as.factor(dados$Grade)
str(dados)
View(dados)
sample(1:1059, 741)
filtro = sample(1:nrow(dados), nrow(dados)*0.7)
treino = dados[filtro,]
teste = dados[-filtro,]
library(rpart)
modelo = rpart(Grade ~., data=treino)
library(rpart.plot)
prp(modelo, extra=1)
library(caret)
prev = predict(modelo, teste, type = 'class')
confusionMatrix(prev, teste$Grade)
x = mtcars$wt
y = mtcars$mpg
plot(x,y)
x
y
lm(y ~ x)
abline(lm(y ~ x))
ggplot(mapping=aes(x, y)) + geom_point() + geom_smooth(method = 'lm')
retas = ggplot(mapping = aes(x, y)) + geom_point() + geom_smooth(se=FALSE, method='lm') + geom_hline(yintercept = mean(y))
retas
ggplot(mapping=aes(x, y)) + geom_point() + geom_smooth(method = 'lm')
retas
ggplot(mapping=aes(x, y)) + geom_point() + geom_smooth(method = 'lm')
retas
ggplot(mapping=aes(x, y)) + geom_point() + geom_smooth(method = 'lm')
retas = ggplot(mapping = aes(x, y)) + geom_point() + geom_smooth(se=FALSE, method='lm') + geom_hline(yintercept = mean(y))
retas
retas + geom_segment(aes(x=x, y=y, xend=x, yend=mean(y)), color='red')
retas + geom_segment(aes(x=x, y=y, xend=x, yend=predict(lm(y~x))), color='red')
retas + geom_segment(aes(x=x, y=y, xend=x, yend=mean(y)), color='red')
retas + geom_segment(aes(x=x, y=y, xend=x, yend=predict(lm(y~x))), color='red')
sqt = sum((mean(y)-y)**2)
sqres = sum((predict(lm(y~x))-y)**2)
r2 = (sqt-sqres)/sqt
r2
predict(modelo)
modelo = lm(y ~ x)
predict(modelo)
y
x
pesos = data.frame(x = c(2500, 3000, 3500))
pesos
predict(modelo, pesos)
y
x
pesos = data.frame(x = c(2.500, 3.000, 3.500))
pesos
predict(modelo, pesos)
y
x
y
predict(modelo, pesos)
plot(x,y)
r2
modelo = lm(y ~ x)
predict(modelo)
pesos = data.frame(x = c(2.500, 3.000, 3.500))
pesos
predict(modelo, pesos)
r2
pesos = data.frame(x = c(2.500, 3.000, 3.500))
predict(modelo, pesos)
