str(iris)
str(iris)
str(iris)
View(iris)
nrow(iris)
sample(1:150, 105)
set.seed(123)
filtro = sample(1:nrow(iris), nrow(iris)*0.7)
treino = iris[filtro,]
teste = iris[-filtro,]
View(teste)
View(treino)
library(rparts)
library(rpart)
modelo = rpart(Species ~., data=treino)
prp(modelo, extra=1)
library(rpart.plot)
install.packages(rpart.plot)
install.packages('rpart.plot')
library(rpart.plot)
prp(modelo, extra=1)
library(caret)
prev = predict(modelo, teste, type = 'class')
View(prev)
confusionMatrix(prev, teste$Species)
setwd("C:/Users/denni/OneDrive/Área de Trabalho/Faculdade/Big Data no Agronegócio/Laboratório de Big Data em Agricultura/R")
dados = read.csv('milknew.csv')
View(dados)
str(dados)
View(dados)
nrow(dados)
nrow(iris)
sample(1:1059, 741)
filtro = sample(1:nrow(iris), nrow(iris)*0.7)
treino = iris[filtro,]
teste = iris[-filtro,]
View(treino)
View(treino)
remove(treino)
remove(teste)
sample(1:1059, 741)
set.seed(123)
filtro = sample(1:nrow(dados), nrow(dados)*0.7)
treino = dados[filtro,]
teste = dados[-filtro,]
library(rpart)
View(dados)
modelo = rpart(Grade ~., data=treino)
View(modelo)
library(rpart.plot)
prp(modelo, extra=1)
library(caret)
prev = predict(modelo, teste, type = 'class')
View(prev)
confusionMatrix(prev, teste$Grade)
confusionMatrix(prev, teste$Grade)
prp(modelo, extra=1)
View(teste)
prev = predict(modelo, teste, type = 'class')
View(prev)
prev = predict(modelo, teste, type = 'class')
View(prev)
confusionMatrix(prev, teste$Grade)
dados = read.csv('milknew.csv')
str(dados)
View(dados)
nrow(dados)
sample(1:1059, 741)
set.seed(123)
filtro = sample(1:nrow(dados), nrow(dados)*0.7)
treino = dados[filtro,]
teste = dados[-filtro,]
library(rpart)
modelo = rpart(Grade ~., data=treino)
library(rpart.plot)
prp(modelo, extra=1)
library(caret)
prev = predict(modelo, teste, type = 'class')
View(prev)
confusionMatrix(prev, teste$Grade)
prev <- factor(prev, levels = levels(teste$Grade))
teste$Grade <- factor(teste$Grade)
confusionMatrix(prev, teste$Grade)
levels(prev) <- union(levels(prev), levels(teste$Grade))
levels(teste$Grade) <- union(levels(prev), levels(teste$Grade))
confusionMatrix(prev, teste$Grade)
filtro = sample(1:nrow(iris), nrow(iris)*0.7)
treino = iris[filtro,]
teste = iris[-filtro,]
modelo = rpart(Species ~., data=treino)
prp(modelo, extra=1)
prev = predict(modelo, teste, type = 'class')
View(prev)
confusionMatrix(prev, teste$Species)
set.seed(123)
filtro = sample(1:nrow(iris), nrow(iris)*0.7)
treino = iris[filtro,]
teste = iris[-filtro,]
modelo = rpart(Species ~., data=treino)
prp(modelo, extra=1)
prev = predict(modelo, teste, type = 'class')
View(prev)
confusionMatrix(prev, teste$Species)
View(modelo)
View(teste)
View(treino)
dados = read.csv('milknew.csv')
str(dados)
View(dados)
nrow(dados)
sample(1:1059, 741)
set.seed(123)
filtro = sample(1:nrow(dados), nrow(dados)*0.7)
treino = dados[filtro,]
teste = dados[-filtro,]
modelo = rpart(Grade ~., data=treino)
prp(modelo, extra=1)
prev = predict(modelo, teste, type = 'class')
confusionMatrix(prev, teste$Grade)
prev = predict(modelo, teste)
View(prev)
confusionMatrix(prev, teste$Grade)
prev = predict(modelo, teste, type = 'class')
View(prev)
confusionMatrix(prev, teste$Grade)
teste$Grade
unique(teste$Grade)
prev = predict(modelo, teste, type = 'class')
View(prev)
levels(prev) <- union(levels(prev), levels(teste$Grade))
levels(teste$Grade) <- union(levels(prev), levels(teste$Grade))
confusionMatrix(prev, teste$Grade)
dados = read.csv('milknew.csv')
sample(1:1059, 741)
set.seed(123)
filtro = sample(1:nrow(dados), nrow(dados)*0.7)
treino = dados[filtro,]
teste = dados[-filtro,]
modelo = rpart(Grade ~., data=treino)
prp(modelo, extra=1)
prev = predict(modelo, teste, type = 'class')
confusionMatrix(prev, teste$Grade)
levels(prev)
levels(teste$Grade)
prev = predict(modelo, teste, type = 'factor')
# Converta prev para fator
prev <- factor(prev, levels = levels(teste$Grade))
levels(teste$Grade)
levels(prev)
levels(teste$Grade)
levels(prev)
dados = read.csv('milknew.csv')
sample(1:1059, 741)
set.seed(123)
filtro = sample(1:nrow(dados), nrow(dados)*0.7)
treino = dados[filtro,]
teste = dados[-filtro,]
modelo = rpart(Grade ~., data=treino)
prp(modelo, extra=1)
prev = predict(modelo, teste, type = 'factor')
prev = predict(modelo, teste, type = 'class')
confusionMatrix(prev, teste$Grade)
levels(prev)
levels(teste$Grade)
sample(1:150, 105)
set.seed(123)
filtro = sample(1:nrow(iris), nrow(iris)*0.7)
treino = iris[filtro,]
teste = iris[-filtro,]
modelo = rpart(Species ~., data=treino)
prp(modelo, extra=1)
prev = predict(modelo, teste, type = 'class')
levels(prev)
levels(treino$Species)
levels(prev)
levels(teste$Grade)
teste
levels(teste$Grade)
dados = read.csv('milknew.csv')
sample(1:1059, 741)
set.seed(123)
filtro = sample(1:nrow(dados), nrow(dados)*0.7)
treino = dados[filtro,]
teste = dados[-filtro,]
modelo = rpart(Grade ~., data=treino)
prp(modelo, extra=1)
prev = predict(modelo, teste, type = 'class')
levels(prev)
levels(teste$Grade)
teste
teste$Grade
levels(dados$Grade)
levels(teste$Grade)
levels(prev)
# Certifique-se de que Grade é um fator
dados$Grade <- as.factor(dados$Grade)
levels(dados$Grade)
confusionMatrix(prev, teste$Grade)
dados = read.csv('milknew.csv')
dados$Grade <- as.factor(dados$Grade)
sample(1:1059, 741)
set.seed(123)
filtro = sample(1:nrow(dados), nrow(dados)*0.7)
treino = dados[filtro,]
teste = dados[-filtro,]
modelo = rpart(Grade ~., data=treino)
prp(modelo, extra=1)
prev = predict(modelo, teste, type = 'class')
confusionMatrix(prev, teste$Grade)
levels(dados$Grade)
levels(teste$Grade)
levels(prev)
sample(1:150, 105)
set.seed(123)
filtro = sample(1:nrow(iris), nrow(iris)*0.7)
treino = iris[filtro,]
teste = iris[-filtro,]
modelo = rpart(Species ~., data=treino)
prp(modelo, extra=1)
prev = predict(modelo, teste, type = 'class')
confusionMatrix(prev, teste$Species)
dados = read.csv('milknew.csv')
dados$Grade <- as.factor(dados$Grade)
str(dados)
View(dados)
sample(1:1059, 741)
set.seed(123)
filtro = sample(1:nrow(dados), nrow(dados)*0.7)
treino = dados[filtro,]
teste = dados[-filtro,]
modelo = rpart(Grade ~., data=treino)
prp(modelo, extra=1)
prev = predict(modelo, teste, type = 'class')
View(prev)
confusionMatrix(prev, teste$Grade)
dados = read.csv('milknew.csv')
dados$Grade <- as.factor(dados$Grade)
sample(1:1059, 741)
filtro = sample(1:nrow(dados), nrow(dados)*0.7)
treino = dados[filtro,]
teste = dados[-filtro,]
modelo = rpart(Grade ~., data=treino)
prp(modelo, extra=1)
prev = predict(modelo, teste, type = 'class')
confusionMatrix(prev, teste$Grade)
